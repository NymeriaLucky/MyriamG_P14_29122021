{"version":3,"sources":["assets/logo.jpg","components/Header.jsx","components/Footer.jsx","assets/json/tableHead.js","helpers/sortTable.js","utils/selector.js","components/TableFooter.jsx","assets/json/tableSize.js","components/Select.jsx","components/TableHeader.jsx","components/TableBody.jsx","helpers/setTableSizeHelper.js","helpers/tableSearchHelper.js","helpers/setTablePage.js","reducers/employeesReducer.js","services/Firebase.js","core/Employee.js","mapping/EmployeeMapper.js","services/EmployeeService.js","components/Loader.jsx","pages/Employee-list.jsx","assets/json/departments.js","assets/json/states.js","helpers/submitForm.js","components/Input.jsx","components/Form.jsx","pages/Home.jsx","components/Error.jsx","App.js","utils/Store.js","index.js"],"names":["Header","link","label","className","to","src","logo","alt","width","height","tableHead","text","value","sortTable","e","direction","column","employeesListScreen","setEmployeesListScreen","setEmployeesList","tableSize","page","preventDefault","stopPropagation","employeeListSorted","Array","from","sort","a","b","slice","selectEmployee","state","employee","TableFooter","employeesListLength","employeesListTotalLength","nbrOfPages","setPage","pages","i","push","onClick","name","abbreviation","Select","options","setElement","htmlFor","id","onChange","target","map","element","TableHeader","TableSize","search","handleSearch","type","length","TableBody","store","useStore","employeesListTotal","getState","data","useState","setEmployeesListLength","setTableSize","Math","ceil","setPages","employeesList","setSearch","size","setTableSizeHelper","words","employeesListFiltered","forEach","Object","values","some","toUpperCase","includes","console","log","tableSearchHelper","aria-label","firstName","lastName","startDate","department","birthdate","street","city","stateName","zipcode","setTablePage","employeeState","status","error","FETCHING","RESOLVED","REJECTED","employeesFetching","employeesResolved","payload","employeesRejected","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Employee","this","EmployeeMapper","json","employeeService2","callback","dispatch","employees","collection","getDocs","employeesSnapshot","docs","doc","employeesListMapped","convertToEmployee","message","Loader","EmployeeList","useSelector","useEffect","isLoaded","isUpdating","departments","states","regexName","regexCity","regexZipcode","regexDate","Input","max","Form","setModal","setModalContent","setFirstName","setLastName","setBirthdate","setStartDate","setStreet","setCity","setZipcode","setStateName","setDepartment","test","employeeData","addDoc","submitForm","Home","modal","modalContent","handleClick","backgroundAction","modalStyle","content","contentStyle","buttonStyle","buttonAction","Error","App","path","configureStore","reducer","action","produce","draft","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,UACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,aACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,cACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,uBACNC,aAAc,MAElB,CACID,KAAM,iCACNC,aAAc,MAElB,CACID,KAAM,UACNC,aAAc,MAElB,CACID,KAAM,UACNC,aAAc,MAElB,CACID,KAAM,OACNC,aAAc,MAElB,CACID,KAAM,SACNC,aAAc,MAElB,CACID,KAAM,QACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,UACNC,aAAc,MAElB,CACID,KAAM,OACNC,aAAc,MAElB,CACID,KAAM,SACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,YACNC,aAAc,MAElB,CACID,KAAM,QACNC,aAAc,MAElB,CACID,KAAM,mBACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,gBACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,YACNC,aAAc,MAElB,CACID,KAAM,cACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,UACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,SACNC,aAAc,MAElB,CACID,KAAM,gBACNC,aAAc,MAElB,CACID,KAAM,aACNC,aAAc,MAElB,CACID,KAAM,aACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,iBACNC,aAAc,MAElB,CACID,KAAM,eACNC,aAAc,MAElB,CACID,KAAM,2BACNC,aAAc,MAElB,CACID,KAAM,OACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,SACNC,aAAc,MAElB,CACID,KAAM,QACNC,aAAc,MAElB,CACID,KAAM,eACNC,aAAc,MAElB,CACID,KAAM,cACNC,aAAc,MAElB,CACID,KAAM,eACNC,aAAc,MAElB,CACID,KAAM,iBACNC,aAAc,MAElB,CACID,KAAM,eACNC,aAAc,MAElB,CACID,KAAM,YACNC,aAAc,MAElB,CACID,KAAM,QACNC,aAAc,MAElB,CACID,KAAM,OACNC,aAAc,MAElB,CACID,KAAM,UACNC,aAAc,MAElB,CACID,KAAM,iBACNC,aAAc,MAElB,CACID,KAAM,WACNC,aAAc,MAElB,CACID,KAAM,aACNC,aAAc,MAElB,CACID,KAAM,gBACNC,aAAc,MAElB,CACID,KAAM,YACNC,aAAc,MAElB,CACID,KAAM,UACNC,aAAc,OCvOhBmG,EAAY,kCAEZC,EAAY,4DACZC,EAAe,aACfC,EAAY,6DCRH,SAASC,EAAT,GAA+D,IAA9CjJ,EAA6C,EAA7CA,MAAOyC,EAAsC,EAAtCA,KAAMe,EAAgC,EAAhCA,KAAMX,EAA0B,EAA1BA,WAAYnC,EAAc,EAAdA,MAAOwI,EAAO,EAAPA,IAClE,OACI,mCACI,sBAAKjJ,UAAU,gBAAf,UACI,uBAAO6C,QAASL,EAAhB,SAAuBzC,IACvB,uBACIwD,KAAMA,EACNf,KAAMA,EACNM,GAAIN,EACJxC,UAAU,+DACVS,MAAOA,EACPsC,SAAU,SAACpC,GAAD,OAAOiC,EAAWjC,EAAEqC,OAAOvC,QACrCwI,IAAKA,SCJV,SAASC,GAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B1F,EAAQC,cAD0C,EAEtBI,mBAAS,IAFa,mBAEjDsB,EAFiD,KAEtCgE,EAFsC,OAGxBtF,mBAAS,IAHe,mBAGjDuB,EAHiD,KAGvCgE,EAHuC,OAItBvF,mBAAS,IAJa,mBAIjD0B,EAJiD,KAItC8D,EAJsC,OAKtBxF,mBAAS,IALa,mBAKjDwB,EALiD,KAKtCiE,EALsC,OAM5BzF,mBAAS,IANmB,mBAMjD2B,EANiD,KAMzC+D,EANyC,OAOhC1F,mBAAS,IAPuB,mBAOjD4B,EAPiD,KAO3C+D,EAP2C,OAQ1B3F,mBAAS,IARiB,mBAQjD8B,EARiD,KAQxC8D,EARwC,OAStB5F,mBAAS4E,EAAO,GAAGlG,cATG,mBASjDmD,EATiD,KAStCgE,EATsC,OAUpB7F,mBAAS2E,EAAY,GAAGjG,cAVJ,mBAUjD+C,EAViD,KAUrCqE,GAVqC,KAYxD,OACI,mCACI,uBAAM7J,UAAU,MAAhB,UACI,sBAAKA,UAAU,8BAAf,UACI,8BACI,cAACgJ,EAAD,CACIjJ,MAAM,aACNyC,KAAK,YACLe,KAAK,OACLX,WAAYyG,EACZ5I,MAAO4E,MAGf,cAAC2D,EAAD,CACIjJ,MAAM,gBACNyC,KAAK,YACLe,KAAK,OACLX,WAAY2G,EACZ9I,MAAOgF,IAEX,cAACuD,EAAD,CACIjJ,MAAM,YACNyC,KAAK,WACLe,KAAK,OACLX,WAAY0G,EACZ7I,MAAO6E,IAEX,cAAC0D,EAAD,CACIjJ,MAAM,aACNyC,KAAK,YACLe,KAAK,OACLX,WAAY4G,EACZ/I,MAAO8E,OAGf,oBAAIvF,UAAU,WACd,oBAAIA,UAAU,YAAd,oBACA,sBAAKA,UAAU,sEAAf,UACI,cAACgJ,EAAD,CACIjJ,MAAM,SACNyC,KAAK,SACLe,KAAK,OACLX,WAAY6G,EACZhJ,MAAOiF,IAEX,cAACsD,EAAD,CACIjJ,MAAM,OACNyC,KAAK,OACLe,KAAK,OACLX,WAAY8G,EACZjJ,MAAOkF,IAEX,cAACjD,EAAD,CACI3C,MAAM,QACNyC,KAAK,QACLG,QAASgG,EACT/F,WAAYgH,EACZnJ,MAAOmF,IAEX,cAACoD,EAAD,CACIjJ,MAAM,UACNyC,KAAK,UACLe,KAAK,SACLX,WAAY+G,EACZlJ,MAAOoF,EACPoD,IAAI,aAGZ,qBAAKjJ,UAAU,OAAf,SACI,cAAC0C,EAAD,CACI3C,MAAM,aACNyC,KAAK,aACLG,QAAS+F,EACT9F,WAAYiH,GACZpJ,MAAO+E,MAGf,qBAAKxF,UAAU,0BAAf,SACI,wBACIA,UAAU,yEACVuC,QAAS,SAAC5B,GAAD,OF1FlB,SACXA,EACA+C,EACA2B,EACAC,EACAG,EACAF,EACAG,EACAC,EACAE,EACAD,EACAJ,EACA4D,EACAD,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMlC,EAAYC,YAAWV,EAAI,kBACjC,GACI0B,EAAUkB,KAAKzE,IACfuD,EAAUkB,KAAKxE,IACfyD,EAAUe,KAAKrE,IACfsD,EAAUe,KAAKvE,IACfG,EAAOlC,OAAS,GAChBqF,EAAUiB,KAAKnE,IACfmD,EAAagB,KAAKjE,GACpB,CACE,IAAMkE,EAAe,CACjB1E,UAAWA,EACXC,SAAUA,EACVG,UAAWA,EACXF,UAAWA,EACXG,OAAQA,EACRC,KAAMA,EACNE,QAASA,EACTD,UAAWA,EACXJ,WAAYA,GAEhBgC,EAAiB9D,EAAOsG,YAAOrC,EAAWoC,IAC1CX,EAAgB,qBAChBD,GAAS,GACTE,EAAa,IACbC,EAAY,IACZC,EAAa,IACbC,EAAa,IACbC,EAAU,IACVC,EAAQ,IACRC,EAAW,IACXC,EAAa,IACbC,EAAc,SAEdT,EAAgB,qCAChBD,GAAS,GAEbxI,EAAEQ,iBACFR,EAAES,kBE6BsB6I,CACItJ,EACA+C,EACA2B,EACAC,EACAG,EACAF,EACAG,EACAC,EACAE,EACAD,EACAJ,EACA4D,EACAD,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,KAzBZ,yB,aC5FL,SAASK,KAAQ,IAAD,EACDnG,oBAAS,GADR,mBACpBoG,EADoB,KACbhB,EADa,OAEapF,mBAAS,IAFtB,mBAEpBqG,EAFoB,KAENhB,EAFM,KAIrBiB,EAAc,WAChBlB,GAAS,IAGb,OACI,qCACI,sBAAMnJ,UAAU,gIAChB,sBAAKA,UAAU,oKAAf,UACI,cAACH,EAAD,CACIC,KAAM,iBACNC,MAAO,2BAEX,cAACmJ,GAAD,CAAMC,SAAUA,EAAUC,gBAAiBA,OAE9Ce,GACG,cAAC,SAAD,CACIG,iBAAkBD,EAClBE,WACI,uIAEJC,QAASJ,EACTK,aAAc,MACdC,YACI,6EAEJC,aAAcN,OCjCnB,SAASO,KACpB,OACI,qCACI,sBAAM5K,UAAU,gIAChB,sBAAKA,UAAU,oLAAf,UACI,qBAAKA,UAAU,OAAf,SACI,oBAAIA,UAAU,iCAAd,mCAIJ,cAAC,IAAD,CACIA,UAAU,8CACVC,GAAG,IAFP,2BCKD4K,OAZf,WACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAI5H,QAAS,cAACgH,GAAD,MACzB,cAAC,IAAD,CAAOY,KAAK,iBAAiB5H,QAAS,cAACmF,EAAD,MACtC,cAAC,IAAD,CAAOyC,KAAK,IAAI5H,QAAS,cAAC0H,GAAD,Y,SCR5BlH,GAAQqH,aAAe,CAChCC,QAAS,CACLlJ,SfoBO,WAAyD,IAAhCD,EAA+B,uDAAvBkE,EAAekF,EAAQ,uCACnE,OAAOC,YAAQrJ,GAAO,SAACsJ,GACnB,OAAQF,EAAO1H,MACX,KAAK2C,EACD,MAAqB,SAAjBiF,EAAMnF,YACNmF,EAAMnF,OAAS,WAGE,aAAjBmF,EAAMnF,QACNmF,EAAMlF,MAAQ,UACdkF,EAAMnF,OAAS,YAGE,aAAjBmF,EAAMnF,YACNmF,EAAMnF,OAAS,iBAGnB,EAEJ,KAAKG,EACD,MAAqB,YAAjBgF,EAAMnF,QAAyC,aAAjBmF,EAAMnF,QACpCmF,EAAMrH,KAAOmH,EAAO1E,aACpB4E,EAAMnF,OAAS,kBAGnB,EAEJ,KAAKI,EACD,MAAqB,YAAjB+E,EAAMnF,QAAyC,aAAjBmF,EAAMnF,QACpCmF,EAAMnF,OAAS,WACfmF,EAAMlF,MAAQgF,EAAO1E,aACrB4E,EAAMrH,KAAO,YAGjB,EAEJ,QACI,aevDZsH,WAAY,SAACC,GAAD,OACRA,EAAqB,CACjBC,mBAAmB,OCF/BC,IAASC,OACL,cAAC,IAAD,CAAU9H,MAAOA,GAAjB,SACI,cAAC,IAAM+H,WAAP,UACI,cAAC,GAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.4c27b324.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.550a61bb.jpg\";","import { Link } from 'react-router-dom';\nimport logo from '../assets/logo.jpg';\n\nexport default function Header({ link, label }) {\n    return (\n        <>\n            <div className=\"flex justify-between p-5\">\n                <div>\n                    <h1 className=\"text-center text-2xl font-bold m-2\">\n                        HRnet\n                    </h1>\n                    <Link className=\"m-2 text-xs underline\" to={link}>\n                        {label}\n                    </Link>\n                </div>\n\n                <img\n                    src={logo}\n                    alt=\"wealth health logo\"\n                    width=\"80\"\n                    height=\"73\"\n                />\n            </div>\n            <hr className=\"shadow\" />\n        </>\n    );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function Header() {\n    return (\n        <>\n            <div className=\"flex justify-center p-5\">\n                <Link className=\"text-center underline\" to=\"/\">\n                    Home\n                </Link>\n            </div>\n        </>\n    );\n}\n","export const tableHead = [\n    { text: 'First Name', value: 'firstName' },\n    { text: 'Last Name', value: 'lastName' },\n    { text: 'Start Date', value: 'startDate' },\n    { text: 'Department', value: 'department' },\n    { text: 'Date of Birth', value: 'birthdate' },\n    { text: 'Street', value: 'street' },\n    { text: 'City', value: 'city' },\n    { text: 'State', value: 'stateName' },\n    { text: 'Zip Code', value: 'zipcode' },\n];\n","export default function sortTable(\n    e,\n    direction,\n    column,\n    employeesListScreen,\n    setEmployeesListScreen,\n    setEmployeesList,\n    tableSize,\n    page\n) {\n    e.preventDefault();\n    e.stopPropagation();\n    let employeeListSorted = [];\n    if (direction === 'up') {\n        employeeListSorted = Array.from(employeesListScreen).sort(function (\n            a,\n            b\n        ) {\n            if (a[column] < b[column]) {\n                return -1;\n            }\n            if (a[column] > b[column]) {\n                return 1;\n            }\n            return 0;\n        });\n    } else {\n        employeeListSorted = Array.from(employeesListScreen).sort(function (\n            a,\n            b\n        ) {\n            if (a[column] > b[column]) {\n                return -1;\n            }\n            if (a[column] < b[column]) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    setEmployeesListScreen(employeeListSorted);\n    setEmployeesList(\n        employeeListSorted.slice(tableSize * page - tableSize, tableSize * page)\n    );\n}\n","export const selectEmployee = (state) => state.employee;\n","export default function TableFooter({\n    tableSize,\n    employeesListLength,\n    employeesListTotalLength,\n    nbrOfPages,\n    setPage,\n    page,\n}) {\n    const pages = [];\n    for (let i = 1; i <= nbrOfPages; i++) {\n        page === i\n            ? pages.push(\n                  <button\n                      key={'page' + i}\n                      value={i}\n                      onClick={() => setPage(i)}\n                      className=\"m-1 h-8 w-8 text-center bg-gray-200 rounded hover:text-white hover:bg-gray-700 hover:border-gray-700\"\n                  >\n                      {i}\n                  </button>\n              )\n            : pages.push(\n                  <button\n                      key={page + i}\n                      value={i}\n                      onClick={() => setPage(i)}\n                      className=\"m-1 h-8 w-8 text-center rounded hover:text-white hover:bg-gray-700 hover:border-gray-700\"\n                  >\n                      {i}\n                  </button>\n              );\n    }\n\n    return (\n        <>\n            <div className=\"flex justify-between\">\n                <div className=\"ml-4\">\n                    <p>\n                        Showing {tableSize * page - tableSize + 1} to{' '}\n                        {tableSize * page > employeesListLength\n                            ? employeesListLength\n                            : tableSize * page}{' '}\n                        of {employeesListLength}{' '}\n                        {employeesListLength < employeesListTotalLength &&\n                            `(filtered from ${employeesListTotalLength} total entries)`}\n                    </p>\n                </div>\n                <div className=\"mr-4\">\n                    <button\n                        onClick={() => page > 1 && setPage(page - 1)}\n                        className=\"m-1 h-8 w-24 rounded hover:text-white hover:bg-gray-700 hover:border-gray-700\"\n                    >\n                        Previous\n                    </button>\n                    {pages}\n                    <button\n                        onClick={() => page < nbrOfPages && setPage(page + 1)}\n                        className=\"m-1 h-8 w-24 rounded hover:text-white hover:bg-gray-700 hover:border-gray-700\"\n                    >\n                        Next\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n}\n","export const tableSize = [\n    {\n        name: '10',\n        abbreviation: 10,\n    },\n    {\n        name: '25',\n        abbreviation: 25,\n    },\n    {\n        name: '50',\n        abbreviation: 50,\n    },\n    {\n        name: '100',\n        abbreviation: 100,\n    },\n];\n","export default function Select({ label, name, options, setElement, value }) {\n    return (\n        <>\n            <div className=\"flex flex-col\">\n                <label htmlFor={name}>{label}</label>\n                <select\n                    name={name}\n                    id={name}\n                    className=\"h-8 border-2 border-green-900 border-opacity-70 rounded\"\n                    value={value}\n                    onChange={(e) => setElement(e.target.value)}\n                >\n                    {options.map((element) => (\n                        <option\n                            key={`element-${element.abbreviation}`}\n                            value={element.abbreviation}\n                        >\n                            {element.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </>\n    );\n}\n","import { tableSize } from '../assets/json/tableSize';\nimport Select from './Select';\n\nexport default function TableHeader({ TableSize, search, handleSearch }) {\n    return (\n        <div className=\"flex justify-between\">\n            <div className=\"ml-4\">\n                <div htmlFor=\"show\" className=\"flex gap-3\">\n                    Show\n                    <Select\n                        name=\"show\"\n                        options={tableSize}\n                        setElement={TableSize}\n                    />\n                    entries\n                </div>\n            </div>\n            <div className=\"pr-2\">\n                <label htmlFor=\"search\">Search :</label>\n                <input\n                    id=\"search\"\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"h-8 border-2 border-green-900 border-opacity-70 rounded pl-2 ml-2\"\n                    onChange={(e) => handleSearch(e.target.value)}\n                    value={search}\n                ></input>\n                {search.length > 0 ? (\n                    <i\n                        className=\"relative far fa-times-circle opacity-100 -left-6 cursor-pointer\"\n                        onClick={() => handleSearch('')}\n                    ></i>\n                ) : (\n                    <i className=\"relative far fa-times-circle opacity-0 -left-6\"></i>\n                )}\n            </div>\n        </div>\n    );\n}\n","import { useState } from 'react';\nimport { useStore } from 'react-redux';\nimport { tableHead } from '../assets/json/tableHead';\nimport sortTable from '../helpers/sortTable';\nimport setTablePage from '../helpers/setTablePage';\nimport { selectEmployee } from '../utils/selector';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport setTableSizeHelper from '../helpers/setTableSizeHelper';\nimport tableSearchHelper from '../helpers/tableSearchHelper';\n\nexport default function TableBody() {\n    const store = useStore();\n    const employeesListTotal = selectEmployee(store.getState()).data;\n    const [employeesListLength, setEmployeesListLength] = useState(\n        employeesListTotal.length\n    );\n    const [tableSize, setTableSize] = useState(10);\n    const [pages, setPages] = useState(\n        Math.ceil(employeesListTotal.length / tableSize)\n    );\n    const [page, setPage] = useState(1);\n    const [employeesListScreen, setEmployeesListScreen] = useState(\n        selectEmployee(store.getState()).data\n    );\n    const [employeesList, setEmployeesList] = useState(\n        employeesListScreen.slice(0, tableSize)\n    );\n    const [search, setSearch] = useState('');\n\n    const handleSetPage = (page) => {\n        setTablePage(\n            setPage,\n            page,\n            setEmployeesList,\n            employeesListScreen,\n            tableSize\n        );\n    };\n\n    const handleSetTableSize = (size) => {\n        setTableSizeHelper(\n            setTableSize,\n            size,\n            setEmployeesList,\n            employeesListScreen,\n            page,\n            employeesListTotal,\n            setPage,\n            setPages\n        );\n    };\n\n    const handleSearch = (words) => {\n        tableSearchHelper(\n            setSearch,\n            words,\n            employeesListTotal,\n            setEmployeesListScreen,\n            setEmployeesList,\n            tableSize,\n            page,\n            setPages,\n            setEmployeesListLength\n        );\n    };\n\n    return (\n        <div>\n            <h1 className=\"text-center text-3xl m-4\">Current Employees</h1>\n            <TableHeader\n                TableSize={handleSetTableSize}\n                search={search}\n                handleSearch={handleSearch}\n            />\n            <table className=\"m-4 table-fixed\">\n                <thead>\n                    <tr>\n                        {tableHead.map((element) => (\n                            <th key={element.value} className=\"p-3 w-1/12\">\n                                <div className=\"flex justify-around items-center whitespace-nowrap\">\n                                    {element.text}\n                                    <div className=\"ml-2 flex-col flex justify-center items-center opacity-25\">\n                                        <button\n                                            type=\"button\"\n                                            aria-label=\"sort alphabetically\"\n                                            onClick={(e) =>\n                                                sortTable(\n                                                    e,\n                                                    'down',\n                                                    element.value,\n                                                    employeesListScreen,\n                                                    setEmployeesListScreen,\n                                                    setEmployeesList,\n                                                    tableSize,\n                                                    page\n                                                )\n                                            }\n                                        >\n                                            <i className=\"fas fa-chevron-up text-xs\"></i>\n                                        </button>\n                                        <button\n                                            type=\"button\"\n                                            aria-label=\"sort alphabetically reverse\"\n                                            onClick={(e) =>\n                                                sortTable(\n                                                    e,\n                                                    'up',\n                                                    element.value,\n                                                    employeesListScreen,\n                                                    setEmployeesListScreen,\n                                                    setEmployeesList,\n                                                    tableSize,\n                                                    page\n                                                )\n                                            }\n                                        >\n                                            <i className=\"fas fa-chevron-down text-xs\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {employeesList.map((employee) => (\n                        <tr key={employee.id}>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.firstName}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.lastName}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.startDate}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.department}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.birthdate}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.street}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.city}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.stateName}\n                            </td>\n                            <td className=\"p-2 border border-emerald-500 text-center whitespace-nowrap\">\n                                {employee.zipcode}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <TableFooter\n                tableSize={tableSize}\n                employeesListLength={employeesListLength}\n                employeesListTotalLength={employeesListTotal.length}\n                nbrOfPages={pages}\n                setPage={handleSetPage}\n                page={page}\n            />\n        </div>\n    );\n}\n","export default function setTableSizeHelper(\n    setTableSize,\n    size,\n    setEmployeesList,\n    employeesListScreen,\n    page,\n    employeesListTotal,\n    setPage,\n    setPages\n) {\n    setTableSize(size);\n    setEmployeesList(\n        employeesListScreen.slice(size * page - size, size * page)\n    );\n    setPages(Math.ceil(employeesListTotal.length / size));\n    setPage(1);\n    setEmployeesList(employeesListScreen.slice(0, size));\n}\n","export default function tableSearchHelper(\n    setSearch,\n    words,\n    employeesListTotal,\n    setEmployeesListScreen,\n    setEmployeesList,\n    tableSize,\n    page,\n    setPages,\n    setEmployeesListLength\n) {\n    setSearch(words);\n    let employeesListFiltered = [];\n    Array.from(employeesListTotal).forEach((element) => {\n        Object.values(element).some((e) =>\n            e.toUpperCase().includes(words.toUpperCase())\n        ) && employeesListFiltered.push(element);\n    });\n    console.log(employeesListFiltered);\n    setEmployeesListScreen(employeesListFiltered);\n    setEmployeesList(\n        employeesListFiltered.slice(\n            tableSize * page - tableSize,\n            tableSize * page\n        )\n    );\n    setPages(Math.ceil(employeesListFiltered.length / tableSize));\n    setEmployeesListLength(employeesListFiltered.length);\n}\n","export default function setTablePage(\n    setPage,\n    page,\n    setEmployeesList,\n    employeesListScreen,\n    tableSize\n) {\n    setPage(page);\n    setEmployeesList(\n        employeesListScreen.slice(\n            tableSize * page - tableSize,\n            tableSize * page\n        )\n    );\n}\n","import produce from 'immer';\n\n// INITIAL STATE\n\nconst employeeState = {\n    status: 'void',\n    data: null,\n    error: null,\n};\n\n// ACTIONS CREATOR\n\nexport const FETCHING = 'employees/fetching';\nexport const RESOLVED = 'employees/resolved';\nexport const REJECTED = 'employees/rejected';\n\nexport const employeesFetching = () => ({ type: FETCHING });\nexport const employeesResolved = (data) => ({ type: RESOLVED, payload: data });\nexport const employeesRejected = (error) => ({\n    type: REJECTED,\n    payload: error,\n});\n\n// EMPLOYEE REDUCER\n\nexport default function employeeReducer(state = employeeState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case FETCHING: {\n                if (draft.status === 'void') {\n                    draft.status = 'pending';\n                    return;\n                }\n                if (draft.status === 'rejected') {\n                    draft.error = null;\n                    draft.status = 'pending';\n                    return;\n                }\n                if (draft.status === 'resolved') {\n                    draft.status = 'updating';\n                    return;\n                }\n                return;\n            }\n            case RESOLVED: {\n                if (draft.status === 'pending' || draft.status === 'updating') {\n                    draft.data = action.payload;\n                    draft.status = 'resolved';\n                    return;\n                }\n                return;\n            }\n            case REJECTED: {\n                if (draft.status === 'pending' || draft.status === 'updating') {\n                    draft.status = 'rejected';\n                    draft.error = action.payload;\n                    draft.data = null;\n                    return;\n                }\n                return;\n            }\n            default:\n                return;\n        }\n    });\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore/lite';\n\n// Firebase Config\nexport const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","export default class Employee {\n    /**\n     * Employee informations\n     *\n     * @param { string } firstName\n     * @param { string } lastName\n     * @param { string } birthdate\n     * @param { string } startDate\n     * @param { string } department\n     * @param { string } street\n     * @param { string } city\n     * @param { string } state\n     * @param { string } zipcode\n     * @param { string } id\n     */\n    constructor(\n        firstName,\n        lastName,\n        birthdate,\n        startDate,\n        department,\n        street,\n        city,\n        stateName,\n        zipcode,\n        id\n    ) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthdate = birthdate;\n        this.startDate = startDate;\n        this.department = department;\n        this.street = street;\n        this.city = city;\n        this.stateName = stateName;\n        this.zipcode = zipcode;\n        this.id = id;\n    }\n}\n","import Employee from '../core/Employee';\n\nexport default class EmployeeMapper {\n    /**\n     * Convert received Json to new User type\n     *\n     * @param { object } json\n     * @returns { new Employee }\n     */\n    static convertToEmployee(json) {\n        return new Employee(\n            json.firstName,\n            json.lastName,\n            json.birthdate,\n            json.startDate,\n            json.department,\n            json.street,\n            json.city,\n            json.stateName,\n            json.zipcode,\n            json.id\n        );\n    }\n}\n","import { selectEmployee } from '../utils/selector';\nimport {\n    employeesFetching,\n    employeesResolved,\n    employeesRejected,\n} from '../reducers/employeesReducer';\nimport { collection, getDocs } from 'firebase/firestore/lite';\nimport { db } from './Firebase';\nimport EmployeeMapper from '../mapping/EmployeeMapper';\n\nexport async function employeeService2(store, callback) {\n    const status = selectEmployee(store.getState()).status;\n    if (status === 'pending' || status === 'updating') {\n        return;\n    }\n    store.dispatch(employeesFetching());\n    try {\n        const employees = collection(db, 'Employees-list');\n        callback();\n        const employeesSnapshot = await getDocs(employees);\n        const employeesList = employeesSnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n        }));\n        const employeesListMapped = employeesList.map((employee) =>\n            EmployeeMapper.convertToEmployee(employee)\n        );\n        store.dispatch(employeesResolved(employeesListMapped));\n    } catch (error) {\n        console.log(error.message);\n        store.dispatch(employeesRejected(error.message));\n    }\n}\n","export default function Loader() {\n    return (\n        <>\n            <div className=\"h-full w-full flex items-center justify-center p-5\">\n                <div className=\"p-4 border-b-color-0 border-8 border-green-900 border-solid rounded-3xl h-0 w-0 animate-spin\"></div>\n            </div>\n        </>\n    );\n}\n","import Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport TableBody from '../components/TableBody';\nimport { useStore } from 'react-redux';\nimport { useEffect } from 'react';\nimport { employeeService2 } from '../services/EmployeeService';\nimport { selectEmployee } from '../utils/selector';\nimport { useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\n\nexport default function EmployeeList() {\n    const store = useStore();\n    const employee = useSelector(selectEmployee);\n\n    useEffect(() => {\n        employeeService2(store, () => {});\n    }, [store]);\n\n    const isLoaded = employee.status === 'resolved';\n    const isUpdating = employee.status === 'updating';\n\n    return (\n        <>\n            <main className=\"font-sans relative opacity-10 bg-main-pattern bg-repeat-space bg-center w-screen h-screen flex justify-center items-center\"></main>\n            <div className=\"absolute border-4 border-green-900 border-opacity-70 top-4 left-1/2 transform -translate-x-1/2 bg-white rounded w-11/12 overflow-scroll\">\n                <Header link={'/'} label={'Back Home'} />\n                {isLoaded || isUpdating ? <TableBody /> : <Loader />}\n                <Footer />\n            </div>\n        </>\n    );\n}\n","export const departments = [\n    {\n        name: 'Sales',\n        abbreviation: 'Sales',\n    },\n    {\n        name: 'Marketing',\n        abbreviation: 'Marketing',\n    },\n    {\n        name: 'Engineering',\n        abbreviation: 'Engineering',\n    },\n    {\n        name: 'Human Resources',\n        abbreviation: 'Human Resources',\n    },\n    {\n        name: 'Legal',\n        abbreviation: 'Legal',\n    },\n];\n","export const states = [\n    {\n        name: 'Alabama',\n        abbreviation: 'AL',\n    },\n    {\n        name: 'Alaska',\n        abbreviation: 'AK',\n    },\n    {\n        name: 'American Samoa',\n        abbreviation: 'AS',\n    },\n    {\n        name: 'Arizona',\n        abbreviation: 'AZ',\n    },\n    {\n        name: 'Arkansas',\n        abbreviation: 'AR',\n    },\n    {\n        name: 'California',\n        abbreviation: 'CA',\n    },\n    {\n        name: 'Colorado',\n        abbreviation: 'CO',\n    },\n    {\n        name: 'Connecticut',\n        abbreviation: 'CT',\n    },\n    {\n        name: 'Delaware',\n        abbreviation: 'DE',\n    },\n    {\n        name: 'District Of Columbia',\n        abbreviation: 'DC',\n    },\n    {\n        name: 'Federated States Of Micronesia',\n        abbreviation: 'FM',\n    },\n    {\n        name: 'Florida',\n        abbreviation: 'FL',\n    },\n    {\n        name: 'Georgia',\n        abbreviation: 'GA',\n    },\n    {\n        name: 'Guam',\n        abbreviation: 'GU',\n    },\n    {\n        name: 'Hawaii',\n        abbreviation: 'HI',\n    },\n    {\n        name: 'Idaho',\n        abbreviation: 'ID',\n    },\n    {\n        name: 'Illinois',\n        abbreviation: 'IL',\n    },\n    {\n        name: 'Indiana',\n        abbreviation: 'IN',\n    },\n    {\n        name: 'Iowa',\n        abbreviation: 'IA',\n    },\n    {\n        name: 'Kansas',\n        abbreviation: 'KS',\n    },\n    {\n        name: 'Kentucky',\n        abbreviation: 'KY',\n    },\n    {\n        name: 'Louisiana',\n        abbreviation: 'LA',\n    },\n    {\n        name: 'Maine',\n        abbreviation: 'ME',\n    },\n    {\n        name: 'Marshall Islands',\n        abbreviation: 'MH',\n    },\n    {\n        name: 'Maryland',\n        abbreviation: 'MD',\n    },\n    {\n        name: 'Massachusetts',\n        abbreviation: 'MA',\n    },\n    {\n        name: 'Michigan',\n        abbreviation: 'MI',\n    },\n    {\n        name: 'Minnesota',\n        abbreviation: 'MN',\n    },\n    {\n        name: 'Mississippi',\n        abbreviation: 'MS',\n    },\n    {\n        name: 'Missouri',\n        abbreviation: 'MO',\n    },\n    {\n        name: 'Montana',\n        abbreviation: 'MT',\n    },\n    {\n        name: 'Nebraska',\n        abbreviation: 'NE',\n    },\n    {\n        name: 'Nevada',\n        abbreviation: 'NV',\n    },\n    {\n        name: 'New Hampshire',\n        abbreviation: 'NH',\n    },\n    {\n        name: 'New Jersey',\n        abbreviation: 'NJ',\n    },\n    {\n        name: 'New Mexico',\n        abbreviation: 'NM',\n    },\n    {\n        name: 'New York',\n        abbreviation: 'NY',\n    },\n    {\n        name: 'North Carolina',\n        abbreviation: 'NC',\n    },\n    {\n        name: 'North Dakota',\n        abbreviation: 'ND',\n    },\n    {\n        name: 'Northern Mariana Islands',\n        abbreviation: 'MP',\n    },\n    {\n        name: 'Ohio',\n        abbreviation: 'OH',\n    },\n    {\n        name: 'Oklahoma',\n        abbreviation: 'OK',\n    },\n    {\n        name: 'Oregon',\n        abbreviation: 'OR',\n    },\n    {\n        name: 'Palau',\n        abbreviation: 'PW',\n    },\n    {\n        name: 'Pennsylvania',\n        abbreviation: 'PA',\n    },\n    {\n        name: 'Puerto Rico',\n        abbreviation: 'PR',\n    },\n    {\n        name: 'Rhode Island',\n        abbreviation: 'RI',\n    },\n    {\n        name: 'South Carolina',\n        abbreviation: 'SC',\n    },\n    {\n        name: 'South Dakota',\n        abbreviation: 'SD',\n    },\n    {\n        name: 'Tennessee',\n        abbreviation: 'TN',\n    },\n    {\n        name: 'Texas',\n        abbreviation: 'TX',\n    },\n    {\n        name: 'Utah',\n        abbreviation: 'UT',\n    },\n    {\n        name: 'Vermont',\n        abbreviation: 'VT',\n    },\n    {\n        name: 'Virgin Islands',\n        abbreviation: 'VI',\n    },\n    {\n        name: 'Virginia',\n        abbreviation: 'VA',\n    },\n    {\n        name: 'Washington',\n        abbreviation: 'WA',\n    },\n    {\n        name: 'West Virginia',\n        abbreviation: 'WV',\n    },\n    {\n        name: 'Wisconsin',\n        abbreviation: 'WI',\n    },\n    {\n        name: 'Wyoming',\n        abbreviation: 'WY',\n    },\n];\n","import { employeeService2 } from '../services/EmployeeService';\nimport { collection, addDoc } from 'firebase/firestore/lite';\nimport { db } from '../services/Firebase';\n\nconst regexName = /^[a-zA-Z]+[a-zA-Z'-]?[a-zA-Z]+$/;\n//const regexAddress = /(\\d+) ((\\w+[ ,])+ ){2}([A-Z]){2} (\\d){5}/;\nconst regexCity = /^[a-zA-Z]+(?:[\\s-'.&/][a-zA-Z]+)*(?:[.|\\s])?(?:[(a-z)])*$/;\nconst regexZipcode = /^[0-9]{5}$/;\nconst regexDate = /^(19|20)\\d\\d[-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])$/;\n\nexport default function submitForm(\n    e,\n    store,\n    firstName,\n    lastName,\n    birthdate,\n    startDate,\n    street,\n    city,\n    zipcode,\n    stateName,\n    department,\n    setModalContent,\n    setModal,\n    setFirstName,\n    setLastName,\n    setBirthdate,\n    setStartDate,\n    setStreet,\n    setCity,\n    setZipcode,\n    setStateName,\n    setDepartment\n) {\n    const employees = collection(db, 'Employees-list');\n    if (\n        regexName.test(firstName) &&\n        regexName.test(lastName) &&\n        regexDate.test(birthdate) &&\n        regexDate.test(startDate) &&\n        street.length > 1 &&\n        regexCity.test(city) &&\n        regexZipcode.test(zipcode)\n    ) {\n        const employeeData = {\n            firstName: firstName,\n            lastName: lastName,\n            birthdate: birthdate,\n            startDate: startDate,\n            street: street,\n            city: city,\n            zipcode: zipcode,\n            stateName: stateName,\n            department: department,\n        };\n        employeeService2(store, addDoc(employees, employeeData));\n        setModalContent('Employee Created!');\n        setModal(true);\n        setFirstName('');\n        setLastName('');\n        setBirthdate('');\n        setStartDate('');\n        setStreet('');\n        setCity('');\n        setZipcode('');\n        setStateName('');\n        setDepartment('');\n    } else {\n        setModalContent('Merci de remplir tous les champs.');\n        setModal(true);\n    }\n    e.preventDefault();\n    e.stopPropagation();\n}\n","export default function Input({ label, name, type, setElement, value, max }) {\n    return (\n        <>\n            <div className=\"flex flex-col\">\n                <label htmlFor={name}>{label}</label>\n                <input\n                    type={type}\n                    name={name}\n                    id={name}\n                    className=\"h-8 border-2 border-green-900 border-opacity-70 rounded pl-2\"\n                    value={value}\n                    onChange={(e) => setElement(e.target.value)}\n                    max={max}\n                ></input>\n            </div>\n        </>\n    );\n}\n","import { useState } from 'react';\nimport { useStore } from 'react-redux';\nimport { departments } from '../assets/json/departments';\nimport { states } from '../assets/json/states';\nimport submitForm from '../helpers/submitForm';\nimport Input from './Input';\nimport Select from './Select';\n\nexport default function Form({ setModal, setModalContent }) {\n    const store = useStore();\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [birthdate, setBirthdate] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [street, setStreet] = useState('');\n    const [city, setCity] = useState('');\n    const [zipcode, setZipcode] = useState('');\n    const [stateName, setStateName] = useState(states[0].abbreviation);\n    const [department, setDepartment] = useState(departments[0].abbreviation);\n\n    return (\n        <>\n            <form className=\"p-2\">\n                <div className=\"grid gap-1 grid-cols-2 mb-2\">\n                    <div>\n                        <Input\n                            label=\"First Name\"\n                            name=\"firstName\"\n                            type=\"text\"\n                            setElement={setFirstName}\n                            value={firstName}\n                        />\n                    </div>\n                    <Input\n                        label=\"Date of Birth\"\n                        name=\"birthdate\"\n                        type=\"date\"\n                        setElement={setBirthdate}\n                        value={birthdate}\n                    />\n                    <Input\n                        label=\"Last Name\"\n                        name=\"lastName\"\n                        type=\"text\"\n                        setElement={setLastName}\n                        value={lastName}\n                    />\n                    <Input\n                        label=\"Start Date\"\n                        name=\"startdate\"\n                        type=\"date\"\n                        setElement={setStartDate}\n                        value={startDate}\n                    />\n                </div>\n                <hr className=\"shadow\" />\n                <h2 className=\"ml-4 pt-2\">Adress</h2>\n                <div className=\"p-2 flex flex-col justify-between m-2 border-black rounded border-2\">\n                    <Input\n                        label=\"Street\"\n                        name=\"street\"\n                        type=\"text\"\n                        setElement={setStreet}\n                        value={street}\n                    />\n                    <Input\n                        label=\"City\"\n                        name=\"city\"\n                        type=\"text\"\n                        setElement={setCity}\n                        value={city}\n                    />\n                    <Select\n                        label=\"State\"\n                        name=\"state\"\n                        options={states}\n                        setElement={setStateName}\n                        value={stateName}\n                    />\n                    <Input\n                        label=\"Zipcode\"\n                        name=\"zipcode\"\n                        type=\"number\"\n                        setElement={setZipcode}\n                        value={zipcode}\n                        max=\"99999\"\n                    />\n                </div>\n                <div className=\"px-2\">\n                    <Select\n                        label=\"Department\"\n                        name=\"department\"\n                        options={departments}\n                        setElement={setDepartment}\n                        value={department}\n                    />\n                </div>\n                <div className=\"flex justify-center p-5\">\n                    <button\n                        className=\"text-white font-black w-24 bg-green-900 hover:bg-green-700 p-2 rounded\"\n                        onClick={(e) =>\n                            submitForm(\n                                e,\n                                store,\n                                firstName,\n                                lastName,\n                                birthdate,\n                                startDate,\n                                street,\n                                city,\n                                zipcode,\n                                stateName,\n                                department,\n                                setModalContent,\n                                setModal,\n                                setFirstName,\n                                setLastName,\n                                setBirthdate,\n                                setStartDate,\n                                setStreet,\n                                setCity,\n                                setZipcode,\n                                setStateName,\n                                setDepartment\n                            )\n                        }\n                    >\n                        Save\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n}\n","import Header from '../components/Header';\nimport Form from '../components/Form';\nimport { useState } from 'react';\n//import Modal from '../components/Modal';\nimport { Modal } from 'dentibiotics_modal';\n\nexport default function Home() {\n    const [modal, setModal] = useState(false);\n    const [modalContent, setModalContent] = useState('');\n\n    const handleClick = () => {\n        setModal(false);\n    };\n\n    return (\n        <>\n            <main className=\"font-sans relative opacity-10 bg-main-pattern bg-repeat-space bg-center w-screen h-screen flex justify-center items-center \"></main>\n            <div className=\"absolute border-4 border-green-900 border-opacity-90 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 bg-white rounded overflow-hidden bg-scroll\">\n                <Header\n                    link={'/employee-list'}\n                    label={'View Current Employees'}\n                />\n                <Form setModal={setModal} setModalContent={setModalContent} />\n            </div>\n            {modal && (\n                <Modal\n                    backgroundAction={handleClick}\n                    modalStyle={\n                        'p-9 border-4 flex flex-col justify-center items-center border-green-900 border-opacity-70 bg-white rounded overflow-hidden bg-scroll'\n                    }\n                    content={modalContent}\n                    contentStyle={'m-5'}\n                    buttonStyle={\n                        'w-24 p-2 opacity-80 hover:opacity-100 rounded px-5 bg-green-900 text-white'\n                    }\n                    buttonAction={handleClick}\n                />\n            )}\n        </>\n    );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function Error() {\n    return (\n        <>\n            <main className=\"font-sans relative opacity-10 bg-main-pattern bg-repeat-space bg-center w-screen h-screen flex justify-center items-center \"></main>\n            <div className=\"absolute text-center border-4 border-green-900 border-opacity-90 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 bg-white rounded overflow-hidden bg-scroll p-8\">\n                <div className=\"py-5\">\n                    <h1 className=\"font-sans text-3xl text-center\">\n                        Page non trouvée\n                    </h1>\n                </div>\n                <Link\n                    className=\"font-sans text-xl text-center underline m-5\"\n                    to=\"/\"\n                >\n                    Accueil\n                </Link>\n            </div>\n        </>\n    );\n}\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport EmployeeList from './pages/Employee-list';\nimport Home from './pages/Home';\nimport Error from './components/Error';\n\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/employee-list\" element={<EmployeeList />} />\n                <Route path=\"*\" element={<Error />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport employeeReducer from '../reducers/employeesReducer';\n\nexport const store = configureStore({\n    reducer: {\n        employee: employeeReducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            serializableCheck: false,\n        }),\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './utils/Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}